#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/gpio/gpio.h>
#include <dt-bindings/led/led.h>
#include <zephyr/dt-bindings/i2c/i2c.h>

/ {
    chosen {
        zmk,kscan = &kscan_composite;
        zmk,matrix-transform = &default_transform;
        zmk,underglow = &led_strip;
        zmk,display = &oled;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <3>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2)
            RC(1,0) RC(1,1) RC(1,2)
            RC(2,0) RC(2,1) RC(2,2)
            RC(3,0)
        >;
    };

    kscan_composite: kscan_composite {
        compatible = "zmk,kscan-composite";
        rows = <4>;
        columns = <3>;

        matrix {
            kscan = <&kscan_matrix>;
        };

        direct {
            kscan = <&kscan_encoder_button>;
            row-offset = <3>;
        };
    };

    kscan_matrix: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";

        col-gpios = 
            <&gpio0 8  GPIO_ACTIVE_HIGH>,   /* COL1: P0.08 */
            <&gpio0 6  GPIO_ACTIVE_HIGH>,   /* COL2: P0.06 */
            <&gpio0 26 GPIO_ACTIVE_HIGH>;   /* COL3: P0.26 */

        row-gpios = 
            <&gpio0 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* ROW1: P0.04 */
            <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* ROW2: P0.12 */
            <&gpio0 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;  /* ROW3: P0.07 */

        debounce-press-ms = <1>;
        debounce-release-ms = <5>;
    };

    kscan_encoder_button: kscan_encoder_button {
        compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&gpio1 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    };

    encoder0: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <32>;
        status = "okay";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0>;
    };
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 9)>; /* P1.09 - Your LED data pin */
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 9)>; /* P1.09 - Your LED data pin */
            low-power-enable;
        };
    };

    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,   /* P0.24 - SDA */
                    <NRF_PSEL(TWIM_SCL, 0, 13)>;   /* P0.13 - SCL */
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,   /* P0.24 - SDA */
                    <NRF_PSEL(TWIM_SCL, 0, 13)>;   /* P0.13 - SCL */
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>;
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <9>; /* 9 LEDs for 3x3 grid */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

&i2c0 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    
    clock-frequency = <I2C_BITRATE_FAST>;

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        prechargep = <0x22>;
    };
};
